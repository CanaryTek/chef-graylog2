#!/bin/bash

### BEGIN INIT INFO
# Provides:        graylog2-server
# Required-Start:  $network 
# Required-Stop:   $network
# Default-Start:   2 3 4 5
# Default-Stop:    1
# Short-Description: Start Graylog2 server
### END INIT INFO

SVCNAME="graylog2-server"

FILE_CONF="/etc/graylog2.conf"
FILE_LOG="/var/log/graylog2-server/graylog2.log"
FILE_PID="/var/run/graylog2-server/graylog2.pid"

DIR_GRAYLOG=/usr/share/graylog2-server/current
DIR_SYSLOG=/usr/share/syslog4j

BIN_SERVER=/usr/share/graylog2-server/current/graylog2-server.jar
BIN_SYSLOG=/usr/share/syslog4j/syslog4j-current-bin.jar

GRAYLOG2_USER="<%= node.graylog2.server_user%>"
GRAYLOG2_GROUP="<%= node.graylog2.server_group%>"

start() {
    if [ ! -e ${FILE_CONF} ]; then
        echo -e "\033[1mConfiguration file ${FILE_CONF} does not exist\033[0m"
        return 1
    fi
    echo -e "\033[1mStarting ${SVCNAME}\033[0m"
        su ${GRAYLOG2_USER} -c "$(which java) -cp ${BIN_SERVER}:${BIN_SYSLOG} org.graylog2.Main -p ${FILE_PID} -f ${FILE_CONF} >> ${FILE_LOG} 2>&1 &"

    sleep 2
    graylog2_test || return 1
}

stop() {
    if [ -e ${FILE_PID} ]; then
        PID=$(cat ${FILE_PID})
        kill ${PID}
        rm -f ${FILE_PID}
        echo -e "\033[1mStoping ${SVCNAME}\033[0m"
    else
        echo -e "\033[1mIt seems that ${SVCNAME} is not running.\033[0m"
    fi
}

graylog2_test() {
    if [ ! -e ${FILE_PID} ]; then
        echo -e "\033[1mConfiguration error, check ${FILE_LOG}.\033[0m"
        return 1
    fi
    local PID=$(cat ${FILE_PID})
    if [ ! -e /proc/$PID ]; then
        echo -e "\033[1mSomething went wrong, check ${FILE_LOG}.\033[0m"
        rm -f ${FILE_PID}
        return 1
    else
        return 0
    fi
}

status() {
    graylog2_test > /dev/null 2>&1
    if [ "$?" == "0" ]; then
       echo -e "\033[1m${SVCNAME} server is up.\033[0m"
       return 0
    else
       echo -e "\033[1m${SVCNAME} server is down.\033[0m"
       return 1
    fi
}

restart() {
    stop
    start
}

case "$1" in
    start)
	start
	;;
    stop)
	stop
	;;
    status)
        status
        ;;
    restart)
	restart
	;;
    *)
	echo -e "\033[1mUsage $0 {start|stop|restart|status}\033[0m"
	RETVAL=1
esac
